import streamlit as st
import pandas as pd
from datetime import datetime
import getpass
import os


st.set_page_config(page_title="Sistema de Backup Grupo Zelus", page_icon="üóÇÔ∏è")

st.title("üóÇÔ∏è Sistema de Backup Grupo Zelus")
st.subheader("Realize backup de arquivos e registre no di√°rio de bordo")

# Upload do arquivo
uploaded_file = st.file_uploader("Selecione o arquivo para backup")

# Observa√ß√£o
observacao = st.text_area("Digite o motivo do backup:")

# Bot√£o de executar
if st.button("üöÄ Realizar Backup"):

    if not uploaded_file:
        st.error("‚ö†Ô∏è Voc√™ precisa selecionar um arquivo.")
    elif not observacao.strip():
        st.error("‚ö†Ô∏è A observa√ß√£o √© obrigat√≥ria.")
    else:
        try:
            usuario = getpass.getuser()
            data_atual = datetime.now().strftime('%d/%m/%Y')
            hora_atual = datetime.now().strftime('%H:%M:%S')

            # Simular local onde o backup √© salvo na nuvem (ex.: pasta no SharePoint)
            nome_arquivo = uploaded_file.name
            timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
            nome_backup = f'BACKUP_{timestamp}_{nome_arquivo}'

            pasta_backup = 'backups_salvos'
            os.makedirs(pasta_backup, exist_ok=True)

            caminho_backup = os.path.join(pasta_backup, nome_backup)

            with open(caminho_backup, "wb") as f:
                f.write(uploaded_file.getbuffer())

            st.success(f"‚úÖ Backup realizado com sucesso: {nome_backup}")

            # Simula di√°rio de bordo no SharePoint (local tempor√°rio no servidor)
            caminho_diario = os.path.join(pasta_backup, "diario_de_bordo.xlsx")

            if os.path.exists(caminho_diario):
                df = pd.read_excel(caminho_diario)
            else:
                df = pd.DataFrame(columns=['Usu√°rio', 'Data', 'Hora', 'Arquivo Origem', 'Backup Gerado', 'Observa√ß√£o'])

            novo_registro = pd.DataFrame([{
                'Usu√°rio': usuario,
                'Data': data_atual,
                'Hora': hora_atual,
                'Arquivo Origem': nome_arquivo,
                'Backup Gerado': caminho_backup,
                'Observa√ß√£o': observacao
            }])

            df = pd.concat([df, novo_registro], ignore_index=True)

            with pd.ExcelWriter(caminho_diario, engine='openpyxl', mode='w') as writer:
                df.to_excel(writer, index=False)

            st.success("üìù Registro atualizado no di√°rio de bordo!")

        except Exception as e:
            st.error(f"‚ùå Erro no backup: {e}")

